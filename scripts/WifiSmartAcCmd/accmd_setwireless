#!/bin/sh
##################################################
#
# 作 者：潘田园
# 日 期：2016-03-04
# 版 本：
#
# 脚本描述：
#	 此脚本对无线参数的设置，包括无线开关，
# 加密方式，密码，ssid名称等
#
##################################################

. /usr/bin/accmd_common



##################################################
#
# $(1) cmd_id
# $(2) gw_ac_id
# $(3) disabled
# $(4) ssid
# $(5) encryption
# $(6) key(password)
# $(7) ssid_hidden
#
# 参数说明：
#	 cmd_id: 命令id
#	 gw_ac_id: 网关id
#	 disabled: wifi开关，取值{0 |1},值为 1 关闭wifi，值为 0 开启wifi
#	 ssid: wifi名称
#	 encryption: 加密方式，取值{none | psk | psk2}, 值为 none 无密码，其他有密码
#	 key: 密码串
#	 ssid_hidden: wifi名称隐藏开关，取值{0 | 1}，值为 1 隐藏，值为 0 不隐藏
#
##################################################


WIFI_DISABLED=""
WIFI_SSID=""
WIFI_ENCRYPTION=""
WIFI_KEY=""
WIFI_SSID_HIDDEN=""

#
# 7620 or 9341
#
CPU_ARCH=9341

if [ $# != 7 ];then
   ErrorMessage $1 $2 "Set wireless parameter Error."
   exit 1
fi


################################
# $(1) disabled
# $(2) ssid
# $(3) encryption
# $(4) key(password)
# $(5) ssid_hidden
################################
set_wireless()
{
   ret=1
   WIFI_DISABLED="$1"
   WIFI_SSID="$2"
   WIFI_ENCRYPTION="$3"
   WIFI_KEY="$4"
   WIFI_SSID_HIDDEN="$5"
   
if [ "$WIFI_DISABLED" == "NULL" ];then
      WIFI_DISABLED=0
fi
   
if [ "$WIFI_SSID" == "NULL" ];then
      WIFI_SSID="nullssid"
fi

if [ "$WIFI_ENCRYPTION" == "NULL" ];then
      WIFI_ENCRYPTION="none"
fi

if [ "$WIFI_KEY" == "NULL" ];then
     WIFI_ENCRYPTION="none"
     WIFI_KEY="123456"
fi

if [ "$WIFI_SSID_HIDDEN" == "NULL" ];then

    WIFI_SSID_HIDDEN="0"

fi

radio=$(uci show wireless|grep ra|grep disable|awk -F "." '{print $2}')
case $radio in
    "ra0")
          uci set wireless.ra0.disabled=$WIFI_DISABLED
         ;;
    "radio0")
          uci set wireless.radio0.disabled=$WIFI_DISABLED
         ;;
     *) exit 1;;
esac

uci set wireless.@wifi-iface[0].ssid=$WIFI_SSID
uci set wireless.@wifi-iface[0].encryption=$WIFI_ENCRYPTION
uci set wireless.@wifi-iface[0].key=$WIFI_KEY
uci set wireless.@wifi-iface[0].hidden=$WIFI_SSID_HIDDEN
uci commit wireless

return $?

}

wireless_restart()
{
case $CPU_ARCH in
    7620)
          wifi reload &> /dev/null
          return $?
         ;;
    9341)
        /bin/ubus call network reload &> /dev/null
        return $?
         ;;
     *) return 1;;
esac

}



set_wireless $3 $4 $5 $6 $7

if [ $? != 0 ];then
   ErrorMessage $1 $2 "Set wireless wifi attribute  Error."
   exit 1
fi

ssid=$(uci get wireless.@wifi-iface[0].ssid)
encryption=$(uci get wireless.@wifi-iface[0].encryption)
key=$(uci get wireless.@wifi-iface[0].key)
hidden=$(uci get wireless.@wifi-iface[0].hidden)

radio=$(uci show wireless|grep ra|grep disable|awk -F "." '{print $2}')
case $radio in
    "ra0")
          disable=$(uci get wireless.ra0.disabled)
         ;;
    "radio0")
          disable=$(uci get wireless.radio0.disabled)
         ;;
     *)disable="";;
esac



if [ "$disable" == "" ];then
    disable=0
fi

if [ "$hidden" == "" ];then
    hidden=0
fi

wireless_restart

if [ $? != 0 ];then
   ErrorMessage $1 $2 "Set wireless ubus call network reload  Error."
   exit 1
fi

echo "{\"cmd_id\":\"$1\",\"gw_ac_id\":\"$2\",\"status\":true,\"info\":\"Set wireless success.\",\"data\":{\"ssid\":\"$ssid\",\"encryption\":\"$encryption\",\"key\":\"$key\",\"ssid_hidden\":$hidden,\"disable\":$disable}}"


