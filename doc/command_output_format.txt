============================================================
  作   者：潘田园
  日   期：2016-03-09
  版   本：
  文档描述：
          此文档说明AC的远程命令执行结果输出的 JSON 格式
============================================================



========================================
  【错误信息】
========================================

{
   "cmd_id":"string",
   "gw_ac_id":"string",
   "status":false,
   "info":"string,the error message"
}

字段说明：
        cmd_id: 字符串，值为命令ID
      gw_ac_id: 字符串，值为网关ID
        status: 布尔型，取值 false
          info: 字符串，错误描述信息

++++++++++++++++++++++++++++++++++++++++


=====================================================================
2.[Set DHCP command] output massage format
=====================================================================

{
   "cmd_id":"string",
   "gw_ac_id":"string",
   "status":true,
   "info":"string,the message",
   "dhcp":{
      "start":120,
      "limit":50,
      "leasetime":"50m"
      "ignore":0
   }
}

[description]:

cmd_id:            type is string, the command ID
gw_ac_id:          type is string, the Gateway's WifiSmartAc ID
status:            type is boolean, a fail flag
info:              type is string, a simple description message
dhcp->start:       type is numerical, dhcp IP start
dhcp->limit:       type is numerical, dhcp IP limits
dhcp->leasetime:   type is string, a leasetime long, MIN value is 2 minutes, normal is 12 hours
dhcp->ignore:      type is numerical, value is 0 or 1, 0  open dhcp, 1 close dhcp 

=========================================================================================================
/////////////////////////////////////////////////////////////////////////////////////////////////////////


===========================================================
3.[Get ap get settings command] output massage format
===========================================================

{
    "gw_ac_id":"456",
    "cmd_id":"123",
    "status":true,
    "info":"command is get ap settings",
    "result":{
        "wireless":{
            "wireless.radio0":"wifi-device",
            "wireless.radio0.type":"mac80211",
            "wireless.radio0.channel":"11",
            "wireless.radio0.hwmode":"11g",
            "wireless.radio0.path":"10180000.wmac",
            "wireless.radio0.htmode":"HT20",
            "wireless.radio0.disabled":"0",
            "wireless.@wifi-iface[0]":"wifi-iface",
            "wireless.@wifi-iface[0].device":"radio0",
            "wireless.@wifi-iface[0].network":"lan",
            "wireless.@wifi-iface[0].mode":"ap",
            "wireless.@wifi-iface[0].ssid":"贵阳广播电视台",
            "wireless.@wifi-iface[0].encryption":"none",
            "wireless.@wifi-iface[0].key":"0",
            "wireless.@wifi-iface[0].hidden":"0"
        },
        "lan":{
            "network.lan":"interface",
            "network.lan.ifname":"eth0.2",
            "network.lan.force_link":"1",
            "network.lan.type":"bridge",
            "network.lan.proto":"static",
            "network.lan.ipaddr":"192.168.86.1",
            "network.lan.netmask":"255.255.255.0",
            "network.lan.ip6assign":"60",
            "network.lan.macaddr":"42:a5:ef:83:cc:7c"
        },
        "wan":{
            "network.wan":"interface",
            "network.wan.ifname":"eth0.1",
            "network.wan.proto":"dhcp",
            "network.wan.macaddr":"42:a5:ef:83:cc:7d"
        },
        "dhcp":{
            "dhcp.@dnsmasq[0]":"dnsmasq",
            "dhcp.@dnsmasq[0].domainneeded":"1",
            "dhcp.@dnsmasq[0].boguspriv":"1",
            "dhcp.@dnsmasq[0].filterwin2k":"0",
            "dhcp.@dnsmasq[0].localise_queries":"1",
            "dhcp.@dnsmasq[0].rebind_protection":"1",
            "dhcp.@dnsmasq[0].rebind_localhost":"1",
            "dhcp.@dnsmasq[0].local":"/lan/",
            "dhcp.@dnsmasq[0].domain":"lan",
            "dhcp.@dnsmasq[0].expandhosts":"1",
            "dhcp.@dnsmasq[0].nonegcache":"0",
            "dhcp.@dnsmasq[0].authoritative":"1",
            "dhcp.@dnsmasq[0].readethers":"1",
            "dhcp.@dnsmasq[0].leasefile":"/tmp/dhcp.leases",
            "dhcp.@dnsmasq[0].resolvfile":"/tmp/resolv.conf.auto",
            "dhcp.lan":"dhcp",
            "dhcp.lan.interface":"lan",
            "dhcp.lan.dhcpv6":"server",
            "dhcp.lan.ra":"server",
            "dhcp.lan.ignore":"0",
            "dhcp.lan.start":"130",
            "dhcp.lan.limit":"30",
            "dhcp.lan.leasetime":"30m",
            "dhcp.wan":"dhcp",
            "dhcp.wan.interface":"wan",
            "dhcp.wan.ignore":"1",
            "dhcp.odhcpd":"odhcpd",
            "dhcp.odhcpd.maindhcp":"0",
            "dhcp.odhcpd.leasefile":"/tmp/hosts/odhcpd",
            "dhcp.odhcpd.leasetrigger":"/usr/sbin/odhcpd-update"
        },
        "reboot_info":"04 : 00"
    }
}


[description]:

cmd_id:            type is string, the command ID
gw_ac_id:          type is string, the Gateway's WifiSmartAc ID
status:            type is boolean, a fail flag
info:              type is string, a simple description message

result->wireless->wireless.@wifi-iface[0].network:    type is string,
result->wireless->wireless.@wifi-iface[0].mode:       type is string,
result->wireless->wireless.@wifi-iface[0].ssid:       type is string,
result->wireless->wireless.@wifi-iface[0].encryption: type is string,
result->wireless->wireless.@wifi-iface[0].key:        type is string,
result->wireless->wireless.@wifi-iface[0].hidden:     type is string,

============================================================
////////////////////////////////////////////////////////////


=======================================
3.[Set ap reboot time command] out put
=======================================


{
   "cmd_id":"string",
   "gw_ac_id":"string",
   "status":true,
   "info":"string,the message",
   "reboot_info":"hh:mm",
   "gw_ac_time":"YYYY-MM-DD hh:mm:ss"
}

[description]:

cmd_id:            type is string, the command ID
gw_ac_id:          type is string, the Gateway's WifiSmartAc ID
status:            type is boolean, a fail flag
info:              type is string, a simple description message
reboot_info:       type is tring, reboot time string "hh:ss"
gw_ac_time:        type is string, gateway current time "YYYY-MM-DD hh:mm:ss"

=====================================================================



=======================================
3.[Set wireless command] out put
=======================================


{
   "cmd_id":"string",
   "gw_ac_id":"string",
   "status":true,
   "info":"string,the message",
   "wifi_info":{
		"ssid":"string",
		"encryption":"string",
		"key":"string",
		"ssid_hidden":0,
		"disable":0
   }
}

[description]:

cmd_id:                  type is string, the command ID
gw_ac_id:                type is string, the Gateway's WifiSmartAc ID
status:                  type is boolean, a fail flag
info:                    type is string, a simple description message
wifi_info->ssid:         type is string, the ssid
wifi_info->encryption:   type is string, enum value is none,psk,psk2
wifi_info->key:          type is string, passwd
wifi_info->ssid_hidden:  type is numericl, 0 or 1
wifi_info->disable:      type is numericl, 0 or 1




=====================================================================



=======================================
3.[accmd_updatelist] out put
=======================================

{
   "cmd_id":"string",
   "gw_ac_id":"string",
   "status":true,
   "info":"string,the message",
}

cmd_id:            type is string, the command ID
gw_ac_id:          type is string, the Gateway's WifiSmartAc ID
status:            type is boolean, a fail flag
info:              type is string, a simple description message

=====================================================================
